#!/bin/bash

# monitor-deployment.sh
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –¥–µ–ø–ª–æ—è –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞

PROJECT_ID="carwash-master"
SERVICE_NAME="crm-web-hhn"
REGION="us-central1"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è${NC} $1"
}

error() {
    echo -e "${RED}‚ùå${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
check_service_status() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ ${SERVICE_NAME}..."
    
    if gcloud run services describe ${SERVICE_NAME} --region=${REGION} &>/dev/null; then
        success "–°–µ—Ä–≤–∏—Å ${SERVICE_NAME} –Ω–∞–π–¥–µ–Ω"
        
        # –ü–æ–ª—É—á–∞–µ–º URL
        SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="value(status.url)")
        log "URL —Å–µ—Ä–≤–∏—Å–∞: ${SERVICE_URL}"
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        STATUS=$(gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="value(status.conditions[0].status)")
        if [ "$STATUS" = "True" ]; then
            success "–°–µ—Ä–≤–∏—Å –∞–∫—Ç–∏–≤–µ–Ω –∏ –≥–æ—Ç–æ–≤"
        else
            warning "–°–µ—Ä–≤–∏—Å –Ω–µ –≥–æ—Ç–æ–≤. –°—Ç–∞—Ç—É—Å: ${STATUS}"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≤–∏–∑–∏–π
        REVISIONS=$(gcloud run revisions list --service=${SERVICE_NAME} --region=${REGION} --format="value(metadata.name)" | wc -l)
        log "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–≤–∏–∑–∏–π: ${REVISIONS}"
        
    else
        error "–°–µ—Ä–≤–∏—Å ${SERVICE_NAME} –Ω–µ –Ω–∞–π–¥–µ–Ω"
        return 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
check_logs() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ª–æ–≥–æ–≤..."
    
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π –ª–æ–≥–æ–≤:"
    gcloud logs read --project=${PROJECT_ID} --limit=20 --format="table(timestamp,severity,textPayload)" | head -20
    
    echo ""
    log "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
    echo "gcloud logs read --project=${PROJECT_ID} --limit=100"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫
check_metrics() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç—Ä–∏–∫ —Å–µ—Ä–≤–∏—Å–∞..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Å
    REQUESTS=$(gcloud monitoring metrics list --filter="metric.type:run.googleapis.com/request_count" --limit=1 2>/dev/null | wc -l)
    
    if [ $REQUESTS -gt 1 ]; then
        log "–ú–µ—Ç—Ä–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã"
        echo "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ—Ç—Ä–∏–∫ –≤ –∫–æ–Ω—Å–æ–ª–∏:"
        echo "https://console.cloud.google.com/run/detail/${REGION}/${SERVICE_NAME}/metrics"
    else
        warning "–ú–µ—Ç—Ä–∏–∫–∏ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã (–º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –≤—Ä–µ–º—è –¥–ª—è —Å–±–æ—Ä–∞)"
    fi
}

# –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
test_availability() {
    log "–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞..."
    
    if gcloud run services describe ${SERVICE_NAME} --region=${REGION} &>/dev/null; then
        SERVICE_URL=$(gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="value(status.url)")
        
        if [ -n "$SERVICE_URL" ]; then
            log "–¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: ${SERVICE_URL}"
            
            # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å curl (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
            if command -v curl &> /dev/null; then
                HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" "${SERVICE_URL}" --max-time 10 2>/dev/null || echo "000")
                
                if [ "$HTTP_CODE" = "200" ]; then
                    success "–°–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç (HTTP 200)"
                elif [ "$HTTP_CODE" = "000" ]; then
                    warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è (–≤–æ–∑–º–æ–∂–Ω–æ, —Å–µ—Ä–≤–∏—Å –µ—â–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è)"
                else
                    warning "–°–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ —Å –∫–æ–¥–æ–º HTTP ${HTTP_CODE}"
                fi
            else
                log "curl –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
            fi
        else
            warning "URL —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"
        fi
    else
        error "–°–µ—Ä–≤–∏—Å –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤..."
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ—Å—É—Ä—Å–∞—Ö
    gcloud run services describe ${SERVICE_NAME} --region=${REGION} --format="table(
        metadata.name,
        spec.template.spec.containers[0].resources.limits.cpu,
        spec.template.spec.containers[0].resources.limits.memory,
        spec.template.spec.containers[0].resources.requests.cpu,
        spec.template.spec.containers[0].resources.requests.memory
    )"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
show_menu() {
    echo ""
    echo "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–µ–ø–ª–æ—è ${SERVICE_NAME}"
    echo "=================================="
    echo "1) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞"
    echo "2) –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
    echo "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏"
    echo "4) –¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏"
    echo "5) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ—Å—É—Ä—Å—ã"
    echo "6) –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "0) –í—ã—Ö–æ–¥"
    echo ""
}

# –ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
full_check() {
    log "üîç –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏..."
    echo ""
    
    check_service_status
    echo ""
    
    check_resources
    echo ""
    
    test_availability
    echo ""
    
    check_metrics
    echo ""
    
    success "–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
while true; do
    show_menu
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-6): " choice
    
    case $choice in
        1)
            check_service_status
            ;;
        2)
            check_logs
            ;;
        3)
            check_metrics
            ;;
        4)
            test_availability
            ;;
        5)
            check_resources
            ;;
        6)
            full_check
            ;;
        0)
            log "–í—ã—Ö–æ–¥ –∏–∑ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
            exit 0
            ;;
        *)
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            ;;
    esac
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
done

